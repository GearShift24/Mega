<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>472</x>
      <y>152</y>
      <w>312</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>IntNode
--
- nodeData : int
-nodePointer : IntNode *
--
+getNodeData() : int
+getNodePointer() : IntNode *
+setNodeData(int value) : void
+setNodePointer(IntNode * next) : void

+IntNode() : Constructor
+IntNode(int value) : init
+IntNode(int value, IntNode * nextNode) : constructor

bg=#9993494</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>344</x>
      <y>72</y>
      <w>152</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Class made by Joe Wrigley
2/12/2017
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>776</x>
      <y>224</y>
      <w>208</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>968</x>
      <y>176</y>
      <w>256</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
- size : int
- front : IntNode *
--
+IntNodeArray(int size) : constructor
+setAtIndex(int index, int value) : void
+getFromIndex(int index) : int
+getSize() : int
bg=#8993334</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>448</x>
      <y>368</y>
      <w>344</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
-nodeData : Type
-nodePointer : Node&lt;Type&gt; *
--
Constructors
+Node&lt;Type&gt;(): Constructor
+Node&lt;Type&gt;(Type value): Constructor
+Node&lt;Type&gt;(Type value, Node&lt;Type&gt; * next) : Constructor



Accessors
+getNodeData() : Type
+getNodePointer() : Node&lt;Type&gt; *
+setNodeData(Type value) : void
+setNodePointer(Node&lt;Type&gt; * next) : void



bg=#8546</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>360</y>
      <w>392</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>Model :: Array&lt;Type&gt;
--
-size : int 
-front : Node&lt;Type&gt; *
--
Constructors:
+ Array&lt;Type&gt;(int size) : Constructor
+Array&lt;Type&gt;();

destructor:
+ ~Array&lt;Type&gt;() : destructor
+ Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied : copyConstructor

Methods/Accessors:
+getSize() const : int
-getFront() const : int

+getFromIndex(int index) : Type
+setAtTindex(int index, Type value) : void
bg=#4252545</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>784</x>
      <y>456</y>
      <w>72</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>448</x>
      <y>128</y>
      <w>792</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>Sample Data Structure
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>424</x>
      <y>336</y>
      <w>832</w>
      <h>344</h>
    </coordinates>
    <panel_attributes>Generic Data Structure
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>904</x>
      <y>728</y>
      <w>464</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt; *
- end : Node&lt;Type&gt; *
--
+ List&lt;Type&gt;() : constructor
+ List&lt;Type&gt;(const List&lt;Type&gt; &amp; source) : copy constructor
+ ~List&lt;Type&gt;() : destructor

+ addAtIndex(int index, Type value) : void
+ add(Type value) : void
+ remove(int index) : Type
+ setAtIndex(int index, Type data) : Type
+ getFromIndex(int index) : Type
+ contains(Type data) : bool
+ getSize() const : int
+ getFront() const : Node&lt;Type&gt; *
+ getEnd() const : Node&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>592</y>
      <w>384</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>460.0;170.0;160.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>352</x>
      <y>0</y>
      <w>120</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Class 
--
Data members
--
Constructors
Method</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>592</y>
      <w>136</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>704</y>
      <w>592</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>Model :: BiDirectionalNode&lt;Type&gt;
--
-nodeData : Type
-next : BiDirectionalNode&lt;Type&gt; *
-previous : BiDirectionalNode&lt;Type&gt; *
--
+BiDirectionalNode&lt;Type&gt;() : Constructor
+BiDirectionalNode&lt;Type&gt;(Type value) : Constructor
 BiDirectionalNode(Type data, BiDirectionalNode&lt;Type&gt; * previous, BiDirectionalNode&lt;Type&gt; * next);

/methods
+ getBiDirectionalNodeData() : Type
+ getNextPointer() : BiDirectionalNode&lt;Type&gt; *
+ getPreviousPointer() : BiDirectionalNode&lt;Type&gt; *

+  void setNodeData(Type data); : void
+ setNextPointer(BiDirectionalNode&lt;Type&gt; * next) : void
+ setPreviousPointer(BiDirectionalNode&lt;Type&gt; * previous) : void

bg=#654675</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>296</x>
      <y>1048</y>
      <w>464</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>/Model :: DoubleLinkedList&lt;Type&gt;/
--
- front : BiDirectionalNode&lt;Type&gt; *
- end : BiDirectionalNode&lt;Type&gt; *
- size : int
--
Non virtual Methods
+ getSize() const : int
+ getFront() const : BiDirectionalNode&lt;Type&gt; *
+ getEnd() const : BiDirectionalNode&lt;Type&gt; *

Virtual methods
+ add(Type value) : void
+ remove(int) : Type


bg=#25253</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>544</x>
      <y>968</y>
      <w>40</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>656</x>
      <y>1280</y>
      <w>120</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1368</y>
      <w>192</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>CircularlyLinkedList


bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>264</x>
      <y>1288</y>
      <w>88</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>192</x>
      <y>1368</y>
      <w>168</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Queue


bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>1280</y>
      <w>24</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>416</x>
      <y>1376</y>
      <w>200</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Stacks

bg=red</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
